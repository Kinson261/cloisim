// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: raysensor.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace cloisim.msgs
{

    [global::ProtoBuf.ProtoContract()]
    public partial class RaySensor : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"display_scan")]
        public bool DisplayScan
        {
            get => __pbn__DisplayScan.GetValueOrDefault();
            set => __pbn__DisplayScan = value;
        }
        public bool ShouldSerializeDisplayScan() => __pbn__DisplayScan != null;
        public void ResetDisplayScan() => __pbn__DisplayScan = null;
        private bool? __pbn__DisplayScan;

        [global::ProtoBuf.ProtoMember(2, Name = @"horizontal_samples")]
        public int HorizontalSamples
        {
            get => __pbn__HorizontalSamples.GetValueOrDefault();
            set => __pbn__HorizontalSamples = value;
        }
        public bool ShouldSerializeHorizontalSamples() => __pbn__HorizontalSamples != null;
        public void ResetHorizontalSamples() => __pbn__HorizontalSamples = null;
        private int? __pbn__HorizontalSamples;

        [global::ProtoBuf.ProtoMember(3, Name = @"horizontal_resolution")]
        public double HorizontalResolution
        {
            get => __pbn__HorizontalResolution.GetValueOrDefault();
            set => __pbn__HorizontalResolution = value;
        }
        public bool ShouldSerializeHorizontalResolution() => __pbn__HorizontalResolution != null;
        public void ResetHorizontalResolution() => __pbn__HorizontalResolution = null;
        private double? __pbn__HorizontalResolution;

        [global::ProtoBuf.ProtoMember(4, Name = @"horizontal_min_angle")]
        public double HorizontalMinAngle
        {
            get => __pbn__HorizontalMinAngle.GetValueOrDefault();
            set => __pbn__HorizontalMinAngle = value;
        }
        public bool ShouldSerializeHorizontalMinAngle() => __pbn__HorizontalMinAngle != null;
        public void ResetHorizontalMinAngle() => __pbn__HorizontalMinAngle = null;
        private double? __pbn__HorizontalMinAngle;

        [global::ProtoBuf.ProtoMember(5, Name = @"horizontal_max_angle")]
        public double HorizontalMaxAngle
        {
            get => __pbn__HorizontalMaxAngle.GetValueOrDefault();
            set => __pbn__HorizontalMaxAngle = value;
        }
        public bool ShouldSerializeHorizontalMaxAngle() => __pbn__HorizontalMaxAngle != null;
        public void ResetHorizontalMaxAngle() => __pbn__HorizontalMaxAngle = null;
        private double? __pbn__HorizontalMaxAngle;

        [global::ProtoBuf.ProtoMember(6, Name = @"vertical_samples")]
        public int VerticalSamples
        {
            get => __pbn__VerticalSamples.GetValueOrDefault();
            set => __pbn__VerticalSamples = value;
        }
        public bool ShouldSerializeVerticalSamples() => __pbn__VerticalSamples != null;
        public void ResetVerticalSamples() => __pbn__VerticalSamples = null;
        private int? __pbn__VerticalSamples;

        [global::ProtoBuf.ProtoMember(7, Name = @"vertical_resolution")]
        public double VerticalResolution
        {
            get => __pbn__VerticalResolution.GetValueOrDefault();
            set => __pbn__VerticalResolution = value;
        }
        public bool ShouldSerializeVerticalResolution() => __pbn__VerticalResolution != null;
        public void ResetVerticalResolution() => __pbn__VerticalResolution = null;
        private double? __pbn__VerticalResolution;

        [global::ProtoBuf.ProtoMember(8, Name = @"vertical_min_angle")]
        public double VerticalMinAngle
        {
            get => __pbn__VerticalMinAngle.GetValueOrDefault();
            set => __pbn__VerticalMinAngle = value;
        }
        public bool ShouldSerializeVerticalMinAngle() => __pbn__VerticalMinAngle != null;
        public void ResetVerticalMinAngle() => __pbn__VerticalMinAngle = null;
        private double? __pbn__VerticalMinAngle;

        [global::ProtoBuf.ProtoMember(9, Name = @"vertical_max_angle")]
        public double VerticalMaxAngle
        {
            get => __pbn__VerticalMaxAngle.GetValueOrDefault();
            set => __pbn__VerticalMaxAngle = value;
        }
        public bool ShouldSerializeVerticalMaxAngle() => __pbn__VerticalMaxAngle != null;
        public void ResetVerticalMaxAngle() => __pbn__VerticalMaxAngle = null;
        private double? __pbn__VerticalMaxAngle;

        [global::ProtoBuf.ProtoMember(10, Name = @"range_min")]
        public double RangeMin
        {
            get => __pbn__RangeMin.GetValueOrDefault();
            set => __pbn__RangeMin = value;
        }
        public bool ShouldSerializeRangeMin() => __pbn__RangeMin != null;
        public void ResetRangeMin() => __pbn__RangeMin = null;
        private double? __pbn__RangeMin;

        [global::ProtoBuf.ProtoMember(11, Name = @"range_max")]
        public double RangeMax
        {
            get => __pbn__RangeMax.GetValueOrDefault();
            set => __pbn__RangeMax = value;
        }
        public bool ShouldSerializeRangeMax() => __pbn__RangeMax != null;
        public void ResetRangeMax() => __pbn__RangeMax = null;
        private double? __pbn__RangeMax;

        [global::ProtoBuf.ProtoMember(12, Name = @"range_resolution")]
        public double RangeResolution
        {
            get => __pbn__RangeResolution.GetValueOrDefault();
            set => __pbn__RangeResolution = value;
        }
        public bool ShouldSerializeRangeResolution() => __pbn__RangeResolution != null;
        public void ResetRangeResolution() => __pbn__RangeResolution = null;
        private double? __pbn__RangeResolution;

    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
