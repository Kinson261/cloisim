// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: friction.proto
// </auto-generated>

#pragma warning disable CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace gazebo.msgs
{

    [global::ProtoBuf.ProtoContract()]
    public partial class Friction : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"mu")]
        public double Mu
        {
            get { return __pbn__Mu.GetValueOrDefault(); }
            set { __pbn__Mu = value; }
        }
        public bool ShouldSerializeMu() => __pbn__Mu != null;
        public void ResetMu() => __pbn__Mu = null;
        private double? __pbn__Mu;

        [global::ProtoBuf.ProtoMember(2, Name = @"mu2")]
        public double Mu2
        {
            get { return __pbn__Mu2.GetValueOrDefault(); }
            set { __pbn__Mu2 = value; }
        }
        public bool ShouldSerializeMu2() => __pbn__Mu2 != null;
        public void ResetMu2() => __pbn__Mu2 = null;
        private double? __pbn__Mu2;

        [global::ProtoBuf.ProtoMember(3, Name = @"fdir1")]
        public Vector3d Fdir1 { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"slip1")]
        public double Slip1
        {
            get { return __pbn__Slip1.GetValueOrDefault(); }
            set { __pbn__Slip1 = value; }
        }
        public bool ShouldSerializeSlip1() => __pbn__Slip1 != null;
        public void ResetSlip1() => __pbn__Slip1 = null;
        private double? __pbn__Slip1;

        [global::ProtoBuf.ProtoMember(5, Name = @"slip2")]
        public double Slip2
        {
            get { return __pbn__Slip2.GetValueOrDefault(); }
            set { __pbn__Slip2 = value; }
        }
        public bool ShouldSerializeSlip2() => __pbn__Slip2 != null;
        public void ResetSlip2() => __pbn__Slip2 = null;
        private double? __pbn__Slip2;

        [global::ProtoBuf.ProtoMember(6)]
        public Torsional torsional { get; set; }

        [global::ProtoBuf.ProtoContract()]
        public partial class Torsional : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"coefficient")]
            public double Coefficient
            {
                get { return __pbn__Coefficient.GetValueOrDefault(); }
                set { __pbn__Coefficient = value; }
            }
            public bool ShouldSerializeCoefficient() => __pbn__Coefficient != null;
            public void ResetCoefficient() => __pbn__Coefficient = null;
            private double? __pbn__Coefficient;

            [global::ProtoBuf.ProtoMember(2, Name = @"use_patch_radius")]
            public bool UsePatchRadius
            {
                get { return __pbn__UsePatchRadius.GetValueOrDefault(); }
                set { __pbn__UsePatchRadius = value; }
            }
            public bool ShouldSerializeUsePatchRadius() => __pbn__UsePatchRadius != null;
            public void ResetUsePatchRadius() => __pbn__UsePatchRadius = null;
            private bool? __pbn__UsePatchRadius;

            [global::ProtoBuf.ProtoMember(3, Name = @"patch_radius")]
            public double PatchRadius
            {
                get { return __pbn__PatchRadius.GetValueOrDefault(); }
                set { __pbn__PatchRadius = value; }
            }
            public bool ShouldSerializePatchRadius() => __pbn__PatchRadius != null;
            public void ResetPatchRadius() => __pbn__PatchRadius = null;
            private double? __pbn__PatchRadius;

            [global::ProtoBuf.ProtoMember(4, Name = @"surface_radius")]
            public double SurfaceRadius
            {
                get { return __pbn__SurfaceRadius.GetValueOrDefault(); }
                set { __pbn__SurfaceRadius = value; }
            }
            public bool ShouldSerializeSurfaceRadius() => __pbn__SurfaceRadius != null;
            public void ResetSurfaceRadius() => __pbn__SurfaceRadius = null;
            private double? __pbn__SurfaceRadius;

            [global::ProtoBuf.ProtoMember(5)]
            public Ode ode { get; set; }

            [global::ProtoBuf.ProtoContract(Name = @"ODE")]
            public partial class Ode : global::ProtoBuf.IExtensible
            {
                private global::ProtoBuf.IExtension __pbn__extensionData;
                global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                    => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

                [global::ProtoBuf.ProtoMember(1, Name = @"slip")]
                public double Slip
                {
                    get { return __pbn__Slip.GetValueOrDefault(); }
                    set { __pbn__Slip = value; }
                }
                public bool ShouldSerializeSlip() => __pbn__Slip != null;
                public void ResetSlip() => __pbn__Slip = null;
                private double? __pbn__Slip;

            }

        }

    }

}

#pragma warning restore CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
