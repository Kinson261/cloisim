// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: material.proto
// </auto-generated>

#pragma warning disable CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace gazebo.msgs
{

    [global::ProtoBuf.ProtoContract()]
    public partial class Material : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public Script script { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue(ShaderType.Vertex)]
        public ShaderType shader_type
        {
            get { return __pbn__shader_type ?? ShaderType.Vertex; }
            set { __pbn__shader_type = value; }
        }
        public bool ShouldSerializeshader_type() => __pbn__shader_type != null;
        public void Resetshader_type() => __pbn__shader_type = null;
        private ShaderType? __pbn__shader_type;

        [global::ProtoBuf.ProtoMember(3, Name = @"normal_map")]
        [global::System.ComponentModel.DefaultValue("")]
        public string NormalMap
        {
            get { return __pbn__NormalMap ?? ""; }
            set { __pbn__NormalMap = value; }
        }
        public bool ShouldSerializeNormalMap() => __pbn__NormalMap != null;
        public void ResetNormalMap() => __pbn__NormalMap = null;
        private string __pbn__NormalMap;

        [global::ProtoBuf.ProtoMember(4, Name = @"ambient")]
        public Color Ambient { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"diffuse")]
        public Color Diffuse { get; set; }

        [global::ProtoBuf.ProtoMember(6, Name = @"specular")]
        public Color Specular { get; set; }

        [global::ProtoBuf.ProtoMember(7, Name = @"emissive")]
        public Color Emissive { get; set; }

        [global::ProtoBuf.ProtoMember(8, Name = @"lighting")]
        public bool Lighting
        {
            get { return __pbn__Lighting.GetValueOrDefault(); }
            set { __pbn__Lighting = value; }
        }
        public bool ShouldSerializeLighting() => __pbn__Lighting != null;
        public void ResetLighting() => __pbn__Lighting = null;
        private bool? __pbn__Lighting;

        [global::ProtoBuf.ProtoContract()]
        public partial class Script : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"uri")]
            public global::System.Collections.Generic.List<string> Uris { get; } = new global::System.Collections.Generic.List<string>();

            [global::ProtoBuf.ProtoMember(2, Name = @"name", IsRequired = true)]
            public string Name { get; set; }

        }

        [global::ProtoBuf.ProtoContract()]
        public enum ShaderType
        {
            [global::ProtoBuf.ProtoEnum(Name = @"VERTEX")]
            Vertex = 1,
            [global::ProtoBuf.ProtoEnum(Name = @"PIXEL")]
            Pixel = 2,
            [global::ProtoBuf.ProtoEnum(Name = @"NORMAL_MAP_OBJECT_SPACE")]
            NormalMapObjectSpace = 3,
            [global::ProtoBuf.ProtoEnum(Name = @"NORMAL_MAP_TANGENT_SPACE")]
            NormalMapTangentSpace = 4,
        }

    }

}

#pragma warning restore CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
